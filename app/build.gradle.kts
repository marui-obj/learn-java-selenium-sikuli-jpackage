/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

import org.panteleyev.jpackage.ImageType

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("org.panteleyev.jpackageplugin") version "1.6.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is used by the application.
    implementation(libs.guava)
    
    implementation("org.seleniumhq.selenium:selenium-java:4.24.0")
    implementation("org.junit.jupiter:junit-jupiter-engine:5.11.0")

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation("commons-io:commons-io:2.6")

    // https://mvnrepository.com/artifact/com.sikulix/sikulixapi
    implementation("com.sikulix:sikulixapi:2.0.5")

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation("org.yaml:snakeyaml:2.3")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.App"
}

task("copyDependencies", Copy::class) {
    from(configurations.runtimeClasspath).into("$buildDir/jars")
}

task("copyJar", Copy::class) {
    from(tasks.jar).into("$buildDir/jars")
}

tasks.jpackage {
    dependsOn("build", "copyDependencies", "copyJar",) 

    input  = "$buildDir/jars"
    destination = "$buildDir/dist"

    appName = "Non-Modular Application"
    vendor = "app.org"

    mainJar = tasks.jar.get().archiveFileName.get()
    mainClass = "org.example.App"

    javaOptions = listOf("-Dfile.encoding=UTF-8")

    appVersion = "1.0"

    type = ImageType.APP_IMAGE

    appContent = listOf("resources")

    windows {
        winConsole = true
    }
}